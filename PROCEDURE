
 **Files to Create:**

1. `mod_n_counter.v` – Verilog source code
2. `mod_n_counter_tb.v` – Testbench code
3. `constraints_top.sdc` – SDC constraints file for synthesis

---

 **Step-by-Step Procedure**

---

### **A) Functional Simulation (Using Cadence Incisive)**

#### 1. **Open Terminal & Initialize Tools**

```bash
csh
source /home/install/cshrc
```

#### 2. **Create Verilog Files**

```bash
gedit mod_n_counter.v
gedit mod_n_counter_tb.v
```

#### 3. **Start Simulation Tool**

```bash
nclaunch -new &
```

#### 4. **Compile and Simulate**

```bash
ncverilog +access+rwc mod_n_counter.v mod_n_counter_tb.v
```

#### 5. **Observe Output**

* Use the simulation GUI to check output waveform.
* Ensure it resets asynchronously and counts MOD-N correctly.

---

### **B) Synthesis (Using Cadence Genus)**

#### 1. **Launch Genus**

```bash
genus -gui
```

#### 2. **Create SDC File**

```bash
gedit constraints_top.sdc
```

 **Example SDC content**:

create_clock -name clk -period 1 -waveform {0 0.5} [get_ports "clk"]
set_clock_transition -rise 0.1 [get_clocks "clk"]
set_clock_transition -fall 0.1 [get_clocks "clk"]
set_clock_uncertainty 0.01 [get_clocks "clk"]
set_input_delay -max 1.0 [get_ports "rst"] -clock [get_clocks "clk"]
set_input_delay -max 1.0 [get_ports "A"] -clock [get_clocks "clk"]
set_input_delay -max 1.0 [get_ports "B"] -clock [get_clocks "clk"]
set_output_delay -max 1.0 [get_ports "C"] -clock [get_clocks "clk"]

#### 3. **Run Synthesis Commands**

```tcl
read_libs /home/install/FOUNDRY/digital/90nm/dig/lib/slow.lib
read_hdl mod_n_counter.v
elaborate
set_top_module mod_n_counter
set_dont_use *XL
set_db syn_generic_effort medium
set_db syn_map_effort medium
set_db syn_opt_effort medium
syn_generic
syn_map
syn_opt
report_timing -unconstrained > mod_n_counter_timing.rep
report_area > mod_n_counter_area.rep
report_power > mod_n_counter_power.rep
write_hdl > mod_n_counter_netlist.v
write_sdc > mod_n_counter_output.sdc
report_qor > mod_n_counter_qor.rep
```

